service: restautant-platform-private

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs10.x
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
        - "s3:*"
      Resource: "*"

plugins:
  - serverless-offline
  - serverless-apigw-binary

custom:
  apigwBinary:
    types:
      - '*/*'

# The `functions` block defines what code to deploy
functions:
  api:
    handler: appServerless.handler
    events:
      - http:
          path: '/'
          method: ANY
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:373909485123:userpool/us-east-1_nym9BKz1r
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          path: '{proxy+}'
          method: ANY
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:373909485123:userpool/us-east-1_nym9BKz1r
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
    environment:
      ENV_CONFIG: ${env:ENV_CONFIG}
      MONGO_QRY: ${env:MONGO_QRY}
      MONGO_CONN_STR: ${env:MONGO_CONN_STR}
      STRIPE_KEY: ${env:STRIPE_KEY}

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
