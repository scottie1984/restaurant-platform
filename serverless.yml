service: restautant-platform

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs10.x

plugins:
  - serverless-offline
  - serverless-apigw-binary

custom:
  apigwBinary:
    types:
      - '*/*'

# The `functions` block defines what code to deploy
functions:
  api:
    handler: appServerless.handler
    events:
      - http: ANY /
        cors: true
      - http: 'ANY {proxy+}'
        cors: true
    environment:
      NODE_ENV: ${env:NODE_ENV}
      MONGO_QRY: ${env:MONGO_QRY}
      MONGO_CONN_STR: ${env:MONGO_CONN_STR}
  privateapi:
    handler: appServerless.handler
    events:
      - http: ANY /
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        cors: true
      - http: 'ANY {proxy+}'
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId:
            Ref: ApiGatewayAuthorizer
        cors: true
    environment:
      NODE_ENV: ${env:NODE_ENV}
      MONGO_QRY: ${env:MONGO_QRY}
      MONGO_CONN_STR: ${env:MONGO_CONN_STR}

resources:
  Resources:
    ApiGatewayAuthorizer:
      DependsOn:
        - ApiGatewayRestApi
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: cognito-authorizer
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - arn:aws:cognito-idp:us-east-1:373909485123:userpool/us-east-1_nym9BKz1r
